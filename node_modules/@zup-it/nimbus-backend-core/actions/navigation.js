"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.dismiss = exports.present = exports.pop = exports.popTo = exports.push = void 0;
const mapValues_1 = __importDefault(require("lodash/mapValues"));
const api_1 = require("../api");
const utils_1 = require("../utils");
const core_action_1 = require("./core-action");
const navigator = {
    push: (0, core_action_1.createCoreAction)('push'),
    pop: (0, core_action_1.createCoreAction)('pop'),
    popTo: (0, core_action_1.createCoreAction)('popTo'),
    present: (0, core_action_1.createCoreAction)('present'),
    dismiss: (0, core_action_1.createCoreAction)('dismiss'),
};
function getParams(props, isPopToView) {
    const isParamASingleUrl = typeof props === 'string' || (0, utils_1.isDynamicExpression)(props);
    if (isParamASingleUrl) {
        return {
            route: isPopToView ? props : { url: props },
        };
    }
    if (props.events) {
        return {
            ...props,
            events: (0, mapValues_1.default)(props.events, (eventFunction, eventName) => eventFunction((0, api_1.createStateNode)(eventName))),
        };
    }
    return props;
}
/** @category Actions */
const push = (props) => navigator.push(getParams(props));
exports.push = push;
/** @category Actions */
const popTo = (props) => navigator.popTo(getParams(props, true));
exports.popTo = popTo;
/** @category Actions */
const pop = (props = {}) => navigator.pop(getParams(props));
exports.pop = pop;
/** @category Actions */
const present = (props) => navigator.present(getParams(props));
exports.present = present;
/** @category Actions */
const dismiss = (props = {}) => navigator.dismiss(getParams(props));
exports.dismiss = dismiss;
