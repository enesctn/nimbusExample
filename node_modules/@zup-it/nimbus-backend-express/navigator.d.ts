import { PopToAction, PopAction, PushAction, PresentAction, DismissAction } from './model/navigation';
import { RouteMap } from './route';
/**
 * See the property `navigation` in the interface `ScreenProps` for a detailed description of the Navigator.
 *
 * The instance of the current navigator is injected by the NimbusApplication for every registered Screen.
 *
 * @example
 * ```tsx
 * const MyScreen: Screen<Type> = ({ navigator }) => {
 *   // ...
 * }
 * ```
 */
export declare class Navigator {
    /**
     * @param routeMap the same routeMap received by NimbusApplication.
     * @param basePath the same navigatorBasePath received by NimbusApplication options, if none, options.basePath is
     * used.
     */
    constructor(routeMap: RouteMap, basePath?: string);
    private screenMap;
    private basePath;
    private getPathAndMethod;
    private buildUrl;
    private buildRouteProperties;
    private navigateRemote;
    push: PushAction;
    pop: PopAction;
    popTo: PopToAction;
    present: PresentAction;
    dismiss: DismissAction;
}
